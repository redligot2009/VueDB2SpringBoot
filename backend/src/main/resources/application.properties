# Application name used in logs and actuator (if enabled)
spring.application.name=backend
spring.profiles.active=db2
# In-memory H2 database URL; keep DB in memory until JVM exits
spring.datasource.url=jdbc:h2:mem:photodb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# H2 driver
spring.datasource.driverClassName=org.h2.Driver
# Default H2 credentials
spring.datasource.username=sa
spring.datasource.password=
# Auto-create/update schema from JPA entities
spring.jpa.hibernate.ddl-auto=update
# Enable H2 console at /h2-console for local dev
spring.h2.console.enabled=true
# Multipart upload size limits
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB

# --- DB2 profile (activate with -Dspring.profiles.active=db2 or SPRING_PROFILES_ACTIVE=db2) ---
---
spring.config.activate.on-profile=db2
# DB2 connection (override via env vars in Docker or host)
spring.datasource.url=${DB_URL:jdbc:db2://db2:50000/PHOTODB}
spring.datasource.username=${DB_USER:db2inst1}
spring.datasource.password=${DB_PASS:passw0rd}
spring.datasource.driverClassName=com.ibm.db2.jcc.DB2Driver

# Use Hibernate DB2 dialect; keep schema auto update for dev
spring.jpa.database-platform=org.hibernate.dialect.DB2Dialect
spring.jpa.hibernate.ddl-auto=update

# DB2 connection pool settings for Docker startup delays
spring.datasource.hikari.connection-timeout=120000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.initialization-fail-timeout=600000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM SYSIBM.SYSDUMMY1
spring.datasource.hikari.validation-timeout=30000
